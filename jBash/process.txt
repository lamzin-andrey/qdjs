GOTO 6
1 Взять дезигн из устройства (я вечерами навалял нехилый такой десигн прямо в a2). * 
2 Попробовать поудалять черные бордеры (на устройстве не удалось это победить).    *
3 Надо определиться, хочу ли я писать его сразу на qdjs. Кажется, что рановато. Но заманчиво.   *
   Надо будет допилить наконец fgc и fpc для нормального использования sdcard.
   Тогда, кажется можно.  Но это скорее всего значит либо ждать Чубайсят, либо качать из интернетов тонны.
   Обходной путь: реализуем FS.read/write на js. Задействуя как раз exec
   Тогда можно прямо сейчас фигачить на qdjs, а j.js для jbash я позже напишу и все срастется.

4. Прога парсит каталог ES/Android/data/land.learn.hwXX/apps
   Каждый каталог проверяется на наличие:
    logo.png
    conf.json
    index.html
    j|js/main.js
    s|css|styles/*
    
   Если все из перечисленного есть, в видимый список добавляется иконка приложения,
    а в невидимый имя каталога.
    
5. При тапе на иконке  
    Очищается body (?) Лучше все-таки hRunnedAppArea (потому что хотим ранее реализованные формы и всё такое)
    Считываются все файлы css из каталога s
    и добавляются в тегах style
    Считывается index.html и содержимое его body добавляется в наше body
    Считываются все js и либо делается для них eval  либо мы их вставляем в script
      Исключение: main.js
    Он пропускается.
    Считывается main.js и выполняется через eval
    Из этого следует, что у нас не должнго быть событий вроде onload.
    У нас одна точка входа, она должна быть в функции main в main.js
    Запуск функции main планируется автоматический (во всяком случае пока).
    
6. Все алерты заменить на writeLog(); writeLog - это функция которая пишет в невидимый див во время одного сеанса. Показывается по тапу / клику на меню.

7. Пишем j.js для ant (aj.js). Реализуем все функции, которые используем тут.
  getExternalStorage  пишем конечно в нативе.
  
8. Добавляем поддержку своих форм, очень хочется!
  
2024-02-07--14-34
2024-02-07--18-58
